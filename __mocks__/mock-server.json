{
  "users": [
    {
      "id": "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266",
      "bountiesCreated": [{"__typename":"Bounty","bountyAddress":"0x13f7816057de7256daf5028eaf8e79775d3a27a3","bountyId":"I_kwDOGWnnz85I9Ahl","bountyMintTime":"1654261044","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[{"__typename":"Deposit","id":"0xd024e550ba670d71f23f336c63ed0aacda946c6836f416028ffa0888b1a4b691","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654261061"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3"}]},{"__typename":"Bounty","bountyAddress":"0x1f191c4166865882b26551fb8618668b7a67d0fb","bountyId":"I_kwDOBC3Cis5Kk2OD","bountyMintTime":"1654260766","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]},{"__typename":"Bounty","bountyAddress":"0xcdf0e532ab8eb9a12da5cae3b6ae5370faacd028","bountyId":"MDU6SXNzdWU5ODU5NDM2NjQ=","bountyMintTime":"1654260724","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[{"__typename":"Deposit","id":"0x7ee8fd2ee7dfa772cdb59e0d7eedec94a51af7fb711e9b80979aa93b9b0722a6","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"20000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654271484"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"20000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"}]},{"__typename":"Bounty","bountyAddress":"0xd316991a0b2014dcf954bb02150df6261661be2e","bountyId":"MDU6SXNzdWU4MjQwMjMyMTk=","bountyMintTime":"1654260628","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]},{"__typename":"Bounty","bountyAddress":"0x35dd738e306d32f2709824b6f744f188da01d3c5","bountyId":"I_kwDOGWnnz85LAu6g","bountyMintTime":"1654260571","bountyClosedTime":"1654260841","status":"CLOSED","claimedTransactionHash":"0xe7eeb3a9f51e4c3d977d329b3c90e9ea06b9ab9e74b37fdc52d5093a9e327284","deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]},{"__typename":"Bounty","bountyAddress":"0x7e2d5fcc5e02cbf2b9f860052c0226104e23f9c7","bountyId":"I_kwDOGWnnz85JAh1-","bountyMintTime":"1654260379","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[{"__typename":"Deposit","id":"0xf4468608784619a03df77b35476dacf71d8b4b79b02a077092b51a7331924d13","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"23000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654261019"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"23000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"}]},{"__typename":"Bounty","bountyAddress":"0x3ca8f9c04c7e3e1624ac2008f92f6f366a869444","bountyId":"I_kwDOGWnnz85LBZmQ","bountyMintTime":"1654260353","bountyClosedTime":"1654260979","status":"CLOSED","claimedTransactionHash":"0x63e127d64b05acdb8d00a07d2313645abc4f4af6ae779c1f8a9be7b4dee11b87","deposits":[{"__typename":"Deposit","id":"0xdd9e09885524a2f2c9a906d7c19c9243d8176d355e5e2bf4d87e8cdd2f85dc89","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654260907"},{"__typename":"Deposit","id":"0xdf51f125ba48ca6ffba4cbbe797e434b792cc6f47c900108a82cd97736619126","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"12000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654260893"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"},{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3"}]},{"__typename":"Bounty","bountyAddress":"0x8daf17a20c9dba35f005b6324f493785d239719d","bountyId":"I_kwDOGWnnz85JAion","bountyMintTime":"1654260333","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]}],
 
      "bountiesClosed": [
	{"__typename":"Bounty","bountyAddress":"0x35dd738e306d32f2709824b6f744f188da01d3c5","bountyId":"I_kwDOGWnnz85LAu6g","bountyMintTime":"1654260571","bountyClosedTime":"1654260841","status":"CLOSED","claimedTransactionHash":"0xe7eeb3a9f51e4c3d977d329b3c90e9ea06b9ab9e74b37fdc52d5093a9e327284","deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]},
		{"__typename":"Bounty","bountyAddress":"0x3ca8f9c04c7e3e1624ac2008f92f6f366a869444","bountyId":"I_kwDOGWnnz85LBZmQ","bountyMintTime":"1654260353","bountyClosedTime":"1654260979","status":"CLOSED","claimedTransactionHash":"0x63e127d64b05acdb8d00a07d2313645abc4f4af6ae779c1f8a9be7b4dee11b87","deposits":[{"__typename":"Deposit","id":"0xdd9e09885524a2f2c9a906d7c19c9243d8176d355e5e2bf4d87e8cdd2f85dc89","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654260907"},{"__typename":"Deposit","id":"0xdf51f125ba48ca6ffba4cbbe797e434b792cc6f47c900108a82cd97736619126","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"12000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654260893"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"},{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3"}]}


      ],
      "deposits": [ ],
      "fundedTokenBalances": [
        {
          "id": "sdfd",
          "volume": 1000000000000000000,
          "tokenAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3"
        }
      ],
      "payouts": [
        {
          "id": "sdf",
          "tokenAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
          "value": 1000000000000000000,
          "payoutTime": 1232,
          "organization": {
            "id": "sdfsd"
          }
        }
      ]
    }
  ],
	"user":{
		"watchedBounties": {
			"bounties": [
				{"contractAddress": "0x1abcD810374b2C0fCDD11cFA280Df9dA7970da4e"}
			]
		}
	},
	"prismaBounty":{
		"watchingUsers": {
			"users": [
				{"userAddress": "0x1abcD810374b2C0fCDD11cFA280Df9dA7970da4e"}
			]
		}
	},
  "organizations": [{"__typename":"Organization","id":"MDEyOk9yZ2FuaXphdGlvbjc3NDAyNTM4","bountiesCreated":[{"__typename":"Bounty","bountyAddress":"0x13f7816057de7256daf5028eaf8e79775d3a27a3","bountyId":"I_kwDOGWnnz85I9Ahl","bountyMintTime":"1654261044","bountyClosedTime":null,"claimedTransactionHash":null,"status":"OPEN","deposits":[{"__typename":"Deposit","id":"0xd024e550ba670d71f23f336c63ed0aacda946c6836f416028ffa0888b1a4b691","refunded":false,"refundTime":null,"tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","expiration":"2592000","receiveTime":"1654261061","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3"}]},
	{"__typename":"Bounty","bountyAddress":"0x35dd738e306d32f2709824b6f744f188da01d3c5","bountyId":"I_kwDOGWnnz85LAu6g","bountyMintTime":"1654260571","bountyClosedTime":"1654260841","claimedTransactionHash":"0xe7eeb3a9f51e4c3d977d329b3c90e9ea06b9ab9e74b37fdc52d5093a9e327284","status":"CLOSED","deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]},{"__typename":"Bounty","bountyAddress":"0x7e2d5fcc5e02cbf2b9f860052c0226104e23f9c7","bountyId":"I_kwDOGWnnz85JAh1-","bountyMintTime":"1654260379","bountyClosedTime":null,"claimedTransactionHash":null,"status":"OPEN","deposits":[{"__typename":"Deposit","id":"0xf4468608784619a03df77b35476dacf71d8b4b79b02a077092b51a7331924d13","refunded":false,"refundTime":null,"tokenAddress":"0x0000000000000000000000000000000000000000","volume":"23000000000000000000","expiration":"2592000","receiveTime":"1654261019","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"23000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"}]},
	{"__typename":"Bounty","bountyAddress":"0x3ca8f9c04c7e3e1624ac2008f92f6f366a869444","bountyId":"I_kwDOGWnnz85LBZmQ","bountyMintTime":"1654260353","bountyClosedTime":"1654260979","claimedTransactionHash":"0x63e127d64b05acdb8d00a07d2313645abc4f4af6ae779c1f8a9be7b4dee11b87","status":"CLOSED","deposits":[{"__typename":"Deposit","id":"0xdd9e09885524a2f2c9a906d7c19c9243d8176d355e5e2bf4d87e8cdd2f85dc89","refunded":false,"refundTime":null,"tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","expiration":"2592000","receiveTime":"1654260907","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}},{"__typename":"Deposit","id":"0xdf51f125ba48ca6ffba4cbbe797e434b792cc6f47c900108a82cd97736619126","refunded":false,"refundTime":null,"tokenAddress":"0x0000000000000000000000000000000000000000","volume":"12000000000000000000","expiration":"2592000","receiveTime":"1654260893","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"},{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3"}]},{"__typename":"Bounty","bountyAddress":"0x8daf17a20c9dba35f005b6324f493785d239719d","bountyId":"I_kwDOGWnnz85JAion","bountyMintTime":"1654260333","bountyClosedTime":null,"claimedTransactionHash":null,"status":"OPEN","deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]}],"fundedTokenBalances":[{"__typename":"OrganizationFundedTokenBalance","id":"MDEyOk9yZ2FuaXphdGlvbjc3NDAyNTM4-0x0000000000000000000000000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"23000000000000000000"},{"__typename":"OrganizationFundedTokenBalance","id":"MDEyOk9yZ2FuaXphdGlvbjc3NDAyNTM4-0x5fbdb2315678afecb367f032d93f642f64180aa3","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000"}],"deposits":[{"__typename":"Deposit","id":"0xd024e550ba670d71f23f336c63ed0aacda946c6836f416028ffa0888b1a4b691","refunded":false,"refundTime":null,"tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","expiration":"2592000","receiveTime":"1654261061","bounty":{"__typename":"Bounty","id":"0x13f7816057de7256daf5028eaf8e79775d3a27a3","bountyId":"I_kwDOGWnnz85I9Ahl"},"sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}},{"__typename":"Deposit","id":"0xdd9e09885524a2f2c9a906d7c19c9243d8176d355e5e2bf4d87e8cdd2f85dc89","refunded":false,"refundTime":null,"tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","expiration":"2592000","receiveTime":"1654260907","bounty":{"__typename":"Bounty","id":"0x3ca8f9c04c7e3e1624ac2008f92f6f366a869444","bountyId":"I_kwDOGWnnz85LBZmQ"},"sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}},{"__typename":"Deposit","id":"0xdf51f125ba48ca6ffba4cbbe797e434b792cc6f47c900108a82cd97736619126","refunded":false,"refundTime":null,"tokenAddress":"0x0000000000000000000000000000000000000000","volume":"12000000000000000000","expiration":"2592000","receiveTime":"1654260893","bounty":{"__typename":"Bounty","id":"0x3ca8f9c04c7e3e1624ac2008f92f6f366a869444","bountyId":"I_kwDOGWnnz85LBZmQ"},"sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}},{"__typename":"Deposit","id":"0xf4468608784619a03df77b35476dacf71d8b4b79b02a077092b51a7331924d13","refunded":false,"refundTime":null,"tokenAddress":"0x0000000000000000000000000000000000000000","volume":"23000000000000000000","expiration":"2592000","receiveTime":"1654261019","bounty":{"__typename":"Bounty","id":"0x7e2d5fcc5e02cbf2b9f860052c0226104e23f9c7","bountyId":"I_kwDOGWnnz85JAh1-"},"sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}}],"payouts":[{"__typename":"Payout","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266-0x3ca8f9c04c7e3e1624ac2008f92f6f366a869444-0x0000000000000000000000000000000000000000-1654260979","tokenAddress":"0x0000000000000000000000000000000000000000","payoutTime":"1654260979","volume":"12000000000000000000"},{"__typename":"Payout","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266-0x3ca8f9c04c7e3e1624ac2008f92f6f366a869444-0x5fbdb2315678afecb367f032d93f642f64180aa3-1654260979","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","payoutTime":"1654260979","volume":"12000000000000000000"}],"payoutTokenBalances":[]},

{"__typename":"Organization","id":"MDEyOk9yZ2FuaXphdGlvbjE0OTg1MDIw","bountiesCreated":[{"__typename":"Bounty","bountyAddress":"0x1f191c4166865882b26551fb8618668b7a67d0fb","bountyId":"I_kwDOBC3Cis5Kk2OD","bountyMintTime":"1654260766","bountyClosedTime":null,"claimedTransactionHash":null,"status":"OPEN","deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]}],"fundedTokenBalances":[],"deposits":[],"payouts":[],"payoutTokenBalances":[]},

{"__typename":"Organization","id":"MDQ6VXNlcjUzNjYyMQ==","bountiesCreated":[{"__typename":"Bounty","bountyAddress":"0xd316991a0b2014dcf954bb02150df6261661be2e","bountyId":"MDU6SXNzdWU4MjQwMjMyMTk=","bountyMintTime":"1654260628","bountyClosedTime":null,"claimedTransactionHash":null,"status":"OPEN","deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]}],"fundedTokenBalances":[],"deposits":[],"payouts":[],"payoutTokenBalances":[]},
{"__typename":"Organization","id":"MDQ6VXNlcjE0ODA0MTIz","bountiesCreated":[{"__typename":"Bounty","bountyAddress":"0xcdf0e532ab8eb9a12da5cae3b6ae5370faacd028","bountyId":"MDU6SXNzdWU5ODU5NDM2NjQ=","bountyMintTime":"1654260724","bountyClosedTime":null,"claimedTransactionHash":null,"status":"OPEN","deposits":[{"__typename":"Deposit","id":"0x7ee8fd2ee7dfa772cdb59e0d7eedec94a51af7fb711e9b80979aa93b9b0722a6","refunded":false,"refundTime":null,"tokenAddress":"0x0000000000000000000000000000000000000000","volume":"20000000000000000000","expiration":"2592000","receiveTime":"1654271484","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"20000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"}]}],"fundedTokenBalances":[{"__typename":"OrganizationFundedTokenBalance","id":"MDQ6VXNlcjE0ODA0MTIz-0x0000000000000000000000000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"20000000000000000000"}],"deposits":[{"__typename":"Deposit","id":"0x7ee8fd2ee7dfa772cdb59e0d7eedec94a51af7fb711e9b80979aa93b9b0722a6","refunded":false,"refundTime":null,"tokenAddress":"0x0000000000000000000000000000000000000000","volume":"20000000000000000000","expiration":"2592000","receiveTime":"1654271484","bounty":{"__typename":"Bounty","id":"0xcdf0e532ab8eb9a12da5cae3b6ae5370faacd028","bountyId":"MDU6SXNzdWU5ODU5NDM2NjQ="},"sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"}}],"payouts":[],"payoutTokenBalances":[]}
] ,
 
  
  "bounties": [
	{"__typename":"Bounty","bountyAddress":"0x13f7816057de7256daf5028eaf8e79775d3a27a3","bountyId":"I_kwDOGWnnz85I9Ahl","bountyMintTime":"1654261044","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[{"__typename":"Deposit","id":"0xd024e550ba670d71f23f336c63ed0aacda946c6836f416028ffa0888b1a4b691","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654261061"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3"}]},
	{"__typename":"Bounty","bountyAddress":"0x1f191c4166865882b26551fb8618668b7a67d0fb","bountyId":"I_kwDOBC3Cis5Kk2OD","bountyMintTime":"1654260766","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]},
	{"__typename":"Bounty","bountyAddress":"0xcdf0e532ab8eb9a12da5cae3b6ae5370faacd028","bountyId":"MDU6SXNzdWU5ODU5NDM2NjQ=","bountyMintTime":"1654260724","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[{"__typename":"Deposit","id":"0x7ee8fd2ee7dfa772cdb59e0d7eedec94a51af7fb711e9b80979aa93b9b0722a6","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"20000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654271484"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"20000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"}]},
	{"__typename":"Bounty","bountyAddress":"0xd316991a0b2014dcf954bb02150df6261661be2e","bountyId":"MDU6SXNzdWU4MjQwMjMyMTk=","bountyMintTime":"1654260628","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]},
	{"__typename":"Bounty","bountyAddress":"0x35dd738e306d32f2709824b6f744f188da01d3c5","bountyId":"I_kwDOGWnnz85LAu6g","bountyMintTime":"1654260571","bountyClosedTime":"1654260841","status":"CLOSED","claimedTransactionHash":"0xe7eeb3a9f51e4c3d977d329b3c90e9ea06b9ab9e74b37fdc52d5093a9e327284","deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]},
	{"__typename":"Bounty","bountyAddress":"0x7e2d5fcc5e02cbf2b9f860052c0226104e23f9c7","bountyId":"I_kwDOGWnnz85JAh1-","bountyMintTime":"1654260379","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[{"__typename":"Deposit","id":"0xf4468608784619a03df77b35476dacf71d8b4b79b02a077092b51a7331924d13","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"23000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654261019"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"23000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"}]},
	{"__typename":"Bounty","bountyAddress":"0x3ca8f9c04c7e3e1624ac2008f92f6f366a869444","bountyId":"I_kwDOGWnnz85LBZmQ","bountyMintTime":"1654260353","bountyClosedTime":"1654260979","status":"CLOSED","claimedTransactionHash":"0x63e127d64b05acdb8d00a07d2313645abc4f4af6ae779c1f8a9be7b4dee11b87","deposits":[{"__typename":"Deposit","id":"0xdd9e09885524a2f2c9a906d7c19c9243d8176d355e5e2bf4d87e8cdd2f85dc89","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3","volume":"12000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654260907"},{"__typename":"Deposit","id":"0xdf51f125ba48ca6ffba4cbbe797e434b792cc6f47c900108a82cd97736619126","refunded":false,"refundTime":null,"expiration":"2592000","tokenAddress":"0x0000000000000000000000000000000000000000","volume":"12000000000000000000","sender":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"receiveTime":"1654260893"}],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x0000000000000000000000000000000000000000"},{"__typename":"BountyFundedTokenBalance","volume":"12000000000000000000","tokenAddress":"0x5fbdb2315678afecb367f032d93f642f64180aa3"}]},
	{"__typename":"Bounty","bountyAddress":"0x8daf17a20c9dba35f005b6324f493785d239719d","bountyId":"I_kwDOGWnnz85JAion","bountyMintTime":"1654260333","bountyClosedTime":null,"status":"OPEN","claimedTransactionHash":null,"deposits":[],"issuer":{"__typename":"User","id":"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"},"bountyTokenBalances":[]}],
  "fetchIssueById": [
    {
      "id": "I_kwDOCUCQzM5H50v0",
      "title": "sdfsdf",
      "body": "sdf",
      "repoName": "sdf",
      "owner": "alo9507",
			"assignees": {"nodes": []},  
		"languages": ["javascript", "java", "clojure", "HTML"],
		
      "avatarUrl": "https://avatars.githubusercontent.com/u/77402538?v=4",
      "createdAt": "sdf",
      "url": "https://github.com/OpenQDev/OpenQ-Frontend/issues/217",
      "labels": 
       [ {
          "name": "sdf",
          "color": "yellow"
        }]
      ,
      "closed": false,
      "titleHTML": "sdf",
      "bodyHTML": "<p dir=\"auto\">Descripription</p>\n<p dir=\"auto\">There is a problem with the test for the telephone validator. They pass validators which do not check for proper spacing or dashing. (i. e. my validator will return true for 55 55-55-555-5).<br>\nThis is the my code which passed the test, but really shouldn't have:</p>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n let firstReg=new RegExp(&quot;^\\-&quot;);\n  if(firstReg.test(str)){return false;}\n  let regEx= new RegExp(&quot;-&quot;,&quot;g&quot;);\n  console.log(firstReg);\n  let newStr=str.replace(regEx,&quot;&quot;);\n  let newRegEx= new RegExp(&quot; &quot;,&quot;g&quot;)\n  newStr=newStr.replace( newRegEx,&quot;&quot;);\n  console.log(newStr);\n  let regExArr=[/^\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d$/, /^[(]\\d\\d\\d[)]\\d\\d\\d\\d\\d\\d\\d$/, /^1[(]\\d\\d\\d[)]\\d\\d\\d\\d\\d\\d\\d$/, /^1\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d$/];\n  for(let i=0; i&lt;regExArr.length; i++){\n    if(regExArr[i].test(newStr)){\n      console.log(i);\n      return regExArr[i].test(newStr);\n    }```\"><pre> <span class=\"pl-k\">let</span> <span class=\"pl-s1\">firstReg</span><span class=\"pl-c1\">=</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"^\\-\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstReg</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span><span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span><span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">regEx</span><span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"-\"</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"g\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstReg</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">newStr</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">regEx</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">newRegEx</span><span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\" \"</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"g\"</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-s1\">newStr</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span> <span class=\"pl-s1\">newRegEx</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">regExArr</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span><span class=\"pl-kos\">[</span>(<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-kos\">[</span>)<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>1<span class=\"pl-kos\">[</span>(<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-kos\">[</span>)<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>1<span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">for</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">++</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-s\">``</span>`</pre></div>"
    },
    {
      "id": "I_kwDOCUCQzM5H50v1",
      "title": "sdfsdf",
      "body": "sdf",
			"assignees": {"nodes": []},  
		"languages": ["javascript", "java", "clojure", "HTML"],
      "url": "https://github.com/OpenQDev/OpenQ-Frontend/issues/218",
      "repoName": "sdf",
      "owner": "alo9507",
      "avatarUrl": "https://avatars.githubusercontent.com/u/77402538?v=4",
      "createdAt": "sdf",
      "labels": [
        {
          "name": "sdf",
          "color": "yellow"
        }

      ],
      "closed": false,
      "titleHTML": "sdf",
      "bodyHTML": "<p dir=\"auto\">Descripription</p>\n<p dir=\"auto\">There is a problem with the test for the telephone validator. They pass validators which do not check for proper spacing or dashing. (i. e. my validator will return true for 55 55-55-555-5).<br>\nThis is the my code which passed the test, but really shouldn't have:</p>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n let firstReg=new RegExp(&quot;^\\-&quot;);\n  if(firstReg.test(str)){return false;}\n  let regEx= new RegExp(&quot;-&quot;,&quot;g&quot;);\n  console.log(firstReg);\n  let newStr=str.replace(regEx,&quot;&quot;);\n  let newRegEx= new RegExp(&quot; &quot;,&quot;g&quot;)\n  newStr=newStr.replace( newRegEx,&quot;&quot;);\n  console.log(newStr);\n  let regExArr=[/^\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d$/, /^[(]\\d\\d\\d[)]\\d\\d\\d\\d\\d\\d\\d$/, /^1[(]\\d\\d\\d[)]\\d\\d\\d\\d\\d\\d\\d$/, /^1\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d$/];\n  for(let i=0; i&lt;regExArr.length; i++){\n    if(regExArr[i].test(newStr)){\n      console.log(i);\n      return regExArr[i].test(newStr);\n    }```\"><pre> <span class=\"pl-k\">let</span> <span class=\"pl-s1\">firstReg</span><span class=\"pl-c1\">=</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"^\\-\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstReg</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span><span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span><span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">regEx</span><span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"-\"</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"g\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstReg</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">newStr</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">regEx</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">newRegEx</span><span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\" \"</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"g\"</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-s1\">newStr</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span> <span class=\"pl-s1\">newRegEx</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">regExArr</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span><span class=\"pl-kos\">[</span>(<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-kos\">[</span>)<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>1<span class=\"pl-kos\">[</span>(<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-kos\">[</span>)<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>1<span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">for</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">++</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-s\">``</span>`</pre></div>"
    },
    {
      "id": "I_kwDOCUCQzM5H50v2",
      "title": "sdfsdf",
      "body": "sdf",
      "url": "https://github.com/OpenQDev/OpenQ-Frontend/issues/219",
      "repoName": "sdf",
      "owner": "alo9507",
			"assignees": {"nodes": [{"name": "Bill French"}]}, 
			
		"languages": ["javascript", "java", "clojure", "HTML"],
      "createdAt": "sdf",
      "labels": [
        {
          "name": "sdf",
          "color": "yellow"
        }
      ],
      "closed": false,
      "titleHTML": "sdf",
      "bodyHTML": "<p dir=\"auto\">Descripription</p>\n<p dir=\"auto\">There is a problem with the test for the telephone validator. They pass validators which do not check for proper spacing or dashing. (i. e. my validator will return true for 55 55-55-555-5).<br>\nThis is the my code which passed the test, but really shouldn't have:</p>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n let firstReg=new RegExp(&quot;^\\-&quot;);\n  if(firstReg.test(str)){return false;}\n  let regEx= new RegExp(&quot;-&quot;,&quot;g&quot;);\n  console.log(firstReg);\n  let newStr=str.replace(regEx,&quot;&quot;);\n  let newRegEx= new RegExp(&quot; &quot;,&quot;g&quot;)\n  newStr=newStr.replace( newRegEx,&quot;&quot;);\n  console.log(newStr);\n  let regExArr=[/^\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d$/, /^[(]\\d\\d\\d[)]\\d\\d\\d\\d\\d\\d\\d$/, /^1[(]\\d\\d\\d[)]\\d\\d\\d\\d\\d\\d\\d$/, /^1\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d$/];\n  for(let i=0; i&lt;regExArr.length; i++){\n    if(regExArr[i].test(newStr)){\n      console.log(i);\n      return regExArr[i].test(newStr);\n    }```\"><pre> <span class=\"pl-k\">let</span> <span class=\"pl-s1\">firstReg</span><span class=\"pl-c1\">=</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"^\\-\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstReg</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span><span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span><span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">regEx</span><span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"-\"</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"g\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstReg</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">newStr</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">regEx</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">newRegEx</span><span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\" \"</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"g\"</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-s1\">newStr</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span> <span class=\"pl-s1\">newRegEx</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">regExArr</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span><span class=\"pl-kos\">[</span>(<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-kos\">[</span>)<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>1<span class=\"pl-kos\">[</span>(<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-kos\">[</span>)<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>1<span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">for</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">++</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-s\">``</span>`</pre></div>"
    },
    {
      "id": "I_kwDOCUCQzM5H50v3",
      "title": "sdfsdf",
      "body": "sdf",     
      "url": "https://github.com/OpenQDev/OpenQ-Frontend/issues/220",
      "repoName": "sdf",
			"assignees": {"nodes": []},  
			
		"languages": ["javascript", "java", "clojure", "HTML"],
      "owner": "alo9507",
      "avatarUrl": "https://avatars.githubusercontent.com/u/77402538?v=4",
      "createdAt": "sdf",
      "labels": [
        {
          "name": "sdf",
          "color": "yellow"
        }
      ],
      "closed": false,
      "titleHTML": "sdf",
      "bodyHTML": "<p dir=\"auto\">Descripription</p>\n<p dir=\"auto\">There is a problem with the test for the telephone validator. They pass validators which do not check for proper spacing or dashing. (i. e. my validator will return true for 55 55-55-555-5).<br>\nThis is the my code which passed the test, but really shouldn't have:</p>\n<div class=\"highlight highlight-source-js position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n let firstReg=new RegExp(&quot;^\\-&quot;);\n  if(firstReg.test(str)){return false;}\n  let regEx= new RegExp(&quot;-&quot;,&quot;g&quot;);\n  console.log(firstReg);\n  let newStr=str.replace(regEx,&quot;&quot;);\n  let newRegEx= new RegExp(&quot; &quot;,&quot;g&quot;)\n  newStr=newStr.replace( newRegEx,&quot;&quot;);\n  console.log(newStr);\n  let regExArr=[/^\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d$/, /^[(]\\d\\d\\d[)]\\d\\d\\d\\d\\d\\d\\d$/, /^1[(]\\d\\d\\d[)]\\d\\d\\d\\d\\d\\d\\d$/, /^1\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d$/];\n  for(let i=0; i&lt;regExArr.length; i++){\n    if(regExArr[i].test(newStr)){\n      console.log(i);\n      return regExArr[i].test(newStr);\n    }```\"><pre> <span class=\"pl-k\">let</span> <span class=\"pl-s1\">firstReg</span><span class=\"pl-c1\">=</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"^\\-\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstReg</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span><span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span><span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">regEx</span><span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"-\"</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"g\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstReg</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">newStr</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">regEx</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">newRegEx</span><span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\" \"</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"g\"</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-s1\">newStr</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">replace</span><span class=\"pl-kos\">(</span> <span class=\"pl-s1\">newRegEx</span><span class=\"pl-kos\">,</span><span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">regExArr</span><span class=\"pl-c1\">=</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span><span class=\"pl-kos\">[</span>(<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-kos\">[</span>)<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>1<span class=\"pl-kos\">[</span>(<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-kos\">[</span>)<span class=\"pl-kos\">]</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>1<span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">for</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">++</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">regExArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newStr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-s\">``</span>`</pre></div>"
    }
     ],
  "fetchIssueByUrl": [
    {
      "id": "I_kwDOCUCQzM5H50v0",
      "title": "sdfsdf",
      "body": "sdf",
      "url": "https://github.com/OpenQDev/OpenQ-Frontend/issues/218",
      "repoName": "openqdev",
      "owner": "alo9507",
      "avatarUrl": "https://avatars.githubusercontent.com/u/77402538?v=4",
      "createdAt": "sdf",
      "labels": [
        {
          "name": "sdf",
          "color": "yellow"
        }
      ],
      "closed": false,
      "titleHTML": "sdf",
      "bodyHTML": "sdf",
      "repository": {
        "owner": {
          "login": "alo9507"
        }
      }
    },
    {
      "id": "abc123",
      "title": "hgjkhg",
      "body": "ghjkghjk",
      "url": "https://github.com/OpenQDev/OpenQ-Frontend/issues/217",
      "repoName": "englebert",
      "owner": "alo9507",
      "avatarUrl": "https://avatars.githubusercontent.com/u/77402538?v=4",
      "createdAt": "sddddf",
      "labels": [
        {
          "name": "safdfdf",
          "color": "red"
        }
      ],
      "closed": false,
      "titleHTML": "jhjkjjjj",
      "bodyHTML": "oyuiyjjjhjkhjk",
      "repository": {
        "owner": {
          "login": "Christopher-Stevers"
        }
      }
    }
  ],
  "githubOrganizations": [
   {
  "__typename": "Organization",
  "name": "OpenQ Labs",
  "login": "OpenQDev",
  "id": "MDEyOk9yZ2FuaXphdGlvbjc3NDAyNTM4",
  "createdAt": "2021-01-13T16:10:08Z",
  "description": "Free, open-source work platform tailored for software development",
  "email": "info@openq.dev",
  "websiteUrl": "https://openq.dev",
  "avatarUrl": "https://avatars.githubusercontent.com/u/77402538?v=4",
  "isVerified": false,
  "descriptionHTML": "<div>Free, open-source work platform tailored for software development</div>",
  "twitterUsername": "openqlabs",
  "url": "https://github.com/OpenQDev"
},
    {

  "__typename": "Organization",

  "name": "Vercel",

  "login": "vercel",

  "id": "MDEyOk9yZ2FuaXphdGlvbjE0OTg1MDIw",

  "createdAt": "2015-10-05T19:40:30Z",

  "description": "Develop. Preview. Ship. Creators of Next.js.",

  "email": "support@vercel.com",

  "websiteUrl": "https://vercel.com",

  "avatarUrl": "https://avatars.githubusercontent.com/u/14985020?v=4",

  "isVerified": true,

  "descriptionHTML": "<div>Develop. Preview. Ship. Creators of Next.js.</div>",

  "twitterUsername": null,

  "url": "https://github.com/vercel"

},
    {"__typename":"User","login":"yoheikikuta","id":"MDQ6VXNlcjE0ODA0MTIz","createdAt":"2015-09-23T11:57:44Z","websiteUrl":"https://yoheikikuta.github.io/","avatarUrl":"https://avatars.githubusercontent.com/u/14804123?u=4c57866c2d77f3ca1ec555cd1b0d9470ea9e4bf8&v=4","twitterUsername":null,"url":"https://github.com/yoheikikuta"},
    {"__typename":"User","login":"lexfridman","id":"MDQ6VXNlcjUzNjYyMQ==","createdAt":"2010-12-26T02:32:21Z","websiteUrl":"https://lexfridman.com","avatarUrl":"https://avatars.githubusercontent.com/u/536621?u=d6a4396dac858671993163b112eae5eaaa2f8e87&v=4","twitterUsername":"lexfridman","url":"https://github.com/lexfridman"}
  ],
  "githubIssues": [{"__typename":"Issue","closed":false,"title":"Good first issue","body":"This is a good first issue","url":"https://github.com/OpenQDev/OpenQ-TestRepo/issues/21","id":"I_kwDOGWnnz85I9Ahl","titleHTML":"Good first issue","bodyHTML":"<p dir=\"auto\">This is a good first issue</p>","assignees":{"__typename":"UserConnection","nodes":[]},"labels":{"__typename":"LabelConnection","edges":[]},"createdAt":"2022-05-03T11:05:14Z","repository":{"__typename":"Repository","id":"R_kgDOGWnnzw","name":"OpenQ-TestRepo","languages":{"__typename":"LanguageConnection","edges":[]},"owner":{"__typename":"Organization","login":"OpenQDev","avatarUrl":"https://avatars.githubusercontent.com/u/77402538?v=4"}}},{"__typename":"Issue","closed":false,"title":"Good first issue","body":"This is a good first issue","url":"https://github.com/OpenQDev/OpenQ-TestRepo/issues/221","id":"I_kwDOGWnnz85I9Ahl","titleHTML":"Good first issue","bodyHTML":"<p dir=\"auto\">This is a good first issue</p>","assignees":{"__typename":"UserConnection","nodes":[]},"labels":{"__typename":"LabelConnection","edges":[]},"createdAt":"2022-05-03T11:05:14Z","repository":{"__typename":"Repository","id":"R_kgDOGWnnzw","name":"OpenQ-TestRepo","languages":{"__typename":"LanguageConnection","edges":[]},"owner":{"__typename":"Organization","login":"OpenQDev","avatarUrl":"https://avatars.githubusercontent.com/u/77402538?v=4"}}},{"__typename":"Issue","closed":false,"title":"No way to disable HMR (hot-module-reload)","body":"### Verify canary release\r\n\r\n- [X] I verified that the issue exists in Next.js canary release\r\n\r\n### Provide environment information\r\n\r\nHot-module-reload is extremely unreliable for me. It doesn't work maybe 10% of the time, and this causes serious problems when I expect it to work and it doesn't.\r\n\r\nFor me, at least in this specific project I'm working on (not in Next.js in general), any tool that is unreliable like this needs to get tossed. The fact that we cannot do this in Next.js is absurd.\r\n\r\nPlease reopen https://github.com/vercel/next.js/issues/1109\r\n\r\n### What browser are you using? (if relevant)\r\n\r\n_No response_\r\n\r\n### How are you deploying your application? (if relevant)\r\n\r\n_No response_\r\n\r\n### Describe the Bug\r\n\r\nsee above text\r\n\r\n### Expected Behavior\r\n\r\nsee above text\r\n\r\n### To Reproduce\r\n\r\nsee above text","url":"https://github.com/vercel/next.js/issues/37252","id":"I_kwDOBC3Cis5Kk2OD","titleHTML":"No way to disable HMR (hot-module-reload)","bodyHTML":"<h3 dir=\"auto\">Verify canary release</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I verified that the issue exists in Next.js canary release</li>\n</ul>\n<h3 dir=\"auto\">Provide environment information</h3>\n<p dir=\"auto\">Hot-module-reload is extremely unreliable for me. It doesn't work maybe 10% of the time, and this causes serious problems when I expect it to work and it doesn't.</p>\n<p dir=\"auto\">For me, at least in this specific project I'm working on (not in Next.js in general), any tool that is unreliable like this needs to get tossed. The fact that we cannot do this in Next.js is absurd.</p>\n<p dir=\"auto\">Please reopen <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"207308648\" data-permission-text=\"Title is private\" data-url=\"https://github.com/vercel/next.js/issues/1109\" data-hovercard-type=\"issue\" data-hovercard-url=\"/vercel/next.js/issues/1109/hovercard\" href=\"https://github.com/vercel/next.js/issues/1109\">#1109</a></p>\n<h3 dir=\"auto\">What browser are you using? (if relevant)</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">How are you deploying your application? (if relevant)</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Describe the Bug</h3>\n<p dir=\"auto\">see above text</p>\n<h3 dir=\"auto\">Expected Behavior</h3>\n<p dir=\"auto\">see above text</p>\n<h3 dir=\"auto\">To Reproduce</h3>\n<p dir=\"auto\">see above text</p>","assignees":{"__typename":"UserConnection","nodes":[]},"labels":{"__typename":"LabelConnection","edges":[{"__typename":"LabelEdge","node":{"__typename":"Label","name":"please add a complete reproduction","color":"fbca04"}},{"__typename":"LabelEdge","node":{"__typename":"Label","name":"template: bug","color":"fddf99"}},{"__typename":"LabelEdge","node":{"__typename":"Label","name":"area: Developer Experience","color":"658CEB"}}]},"createdAt":"2022-05-27T19:13:07Z","repository":{"__typename":"Repository","id":"MDEwOlJlcG9zaXRvcnk3MDEwNzc4Ng==","name":"next.js","languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"JavaScript"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"CSS"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"TypeScript"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Shell"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Dockerfile"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"SCSS"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Sass"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Rust"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Batchfile"}}]},"owner":{"__typename":"Organization","login":"vercel","avatarUrl":"https://avatars.githubusercontent.com/u/14985020?v=4"}}},{"__typename":"Issue","closed":false,"title":"学習プログラムの再現性を確保する方法について","body":"プログラムやドキュメント等を共有いただきありがとうございます。\r\nfinetune-to-livedoor-corpus.ipynbでsrc/run_classifier.pyを実行する箇所で学習の再現性を確保したいです。\r\n例えばシード値の固定など、再現性確保のために書き換える必要があるプログラムと処理を教えていただけると幸いです。\r\n\r\n現状、以下のプログラムで呼び出しているモジュールに対してシード値を固定していますが、再現性を確保できていない状況です。\r\n- run_classifier.py\r\n  - tensorflow\r\n- tokenization_sentencepiece.py\r\n  - tensorflow\r\n- modeling.py\r\n  - numpy\r\n  - tensorflow\r\n- optimization.py\r\n  - tensorflow\r\n\r\nnumpy,tensorslowのシード値は以下の方法で固定しています。\r\n```\r\ndef fix_seed(seed):\r\n    # Numpy\r\n    np.random.seed(seed)\r\n    # Tensorflow\r\n    tf.compat.v1.set_random_seed(seed)\r\n\r\nSEED = 42\r\nfix_seed(SEED)\r\n```\r\n\r\n上記のコードは全て、例えば以下のように最初のimportが終わった個所に書いています。\r\nhttps://github.com/yoheikikuta/bert-japanese/blob/master/src/run_classifier.py#L20\r\n\r\n上記以外にシード値固定などの学習の再現性確保に必要なプログラムやモジュールがあればご教示いただけますと幸いです。\r\nまた、他にも学習の再現性確保をするための補足事項もあればご教示いただけると幸いです。","url":"https://github.com/yoheikikuta/bert-japanese/issues/27","id":"MDU6SXNzdWU5ODU5NDM2NjQ=","titleHTML":"学習プログラムの再現性を確保する方法について","bodyHTML":"<p dir=\"auto\">プログラムやドキュメント等を共有いただきありがとうございます。<br>\nfinetune-to-livedoor-corpus.ipynbでsrc/run_classifier.pyを実行する箇所で学習の再現性を確保したいです。<br>\n例えばシード値の固定など、再現性確保のために書き換える必要があるプログラムと処理を教えていただけると幸いです。</p>\n<p dir=\"auto\">現状、以下のプログラムで呼び出しているモジュールに対してシード値を固定していますが、再現性を確保できていない状況です。</p>\n<ul dir=\"auto\">\n<li>run_classifier.py\n<ul dir=\"auto\">\n<li>tensorflow</li>\n</ul>\n</li>\n<li>tokenization_sentencepiece.py\n<ul dir=\"auto\">\n<li>tensorflow</li>\n</ul>\n</li>\n<li>modeling.py\n<ul dir=\"auto\">\n<li>numpy</li>\n<li>tensorflow</li>\n</ul>\n</li>\n<li>optimization.py\n<ul dir=\"auto\">\n<li>tensorflow</li>\n</ul>\n</li>\n</ul>\n<p dir=\"auto\">numpy,tensorslowのシード値は以下の方法で固定しています。</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"def fix_seed(seed):\n    # Numpy\n    np.random.seed(seed)\n    # Tensorflow\n    tf.compat.v1.set_random_seed(seed)\n\nSEED = 42\nfix_seed(SEED)\"><pre class=\"notranslate\"><code>def fix_seed(seed):\n    # Numpy\n    np.random.seed(seed)\n    # Tensorflow\n    tf.compat.v1.set_random_seed(seed)\n\nSEED = 42\nfix_seed(SEED)\n</code></pre></div>\n<p dir=\"auto\">上記のコードは全て、例えば以下のように最初のimportが終わった個所に書いています。<br>\n<a href=\"https://github.com/yoheikikuta/bert-japanese/blob/master/src/run_classifier.py#L20\">https://github.com/yoheikikuta/bert-japanese/blob/master/src/run_classifier.py#L20</a></p>\n<p dir=\"auto\">上記以外にシード値固定などの学習の再現性確保に必要なプログラムやモジュールがあればご教示いただけますと幸いです。<br>\nまた、他にも学習の再現性確保をするための補足事項もあればご教示いただけると幸いです。</p>","assignees":{"__typename":"UserConnection","nodes":[]},"labels":{"__typename":"LabelConnection","edges":[]},"createdAt":"2021-09-02T01:28:38Z","repository":{"__typename":"Repository","id":"MDEwOlJlcG9zaXRvcnkxNjI4NTE2NzI=","name":"bert-japanese","languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Dockerfile"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Python"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Shell"}},{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Jupyter Notebook"}}]},"owner":{"__typename":"User","login":"yoheikikuta","avatarUrl":"https://avatars.githubusercontent.com/u/14804123?u=4c57866c2d77f3ca1ec555cd1b0d9470ea9e4bf8&v=4"}}},{"__typename":"Issue","closed":false,"title":"Learning 📕 ","body":"","url":"https://github.com/lexfridman/mit-deep-learning/issues/26","id":"MDU6SXNzdWU4MjQwMjMyMTk=","titleHTML":"Learning <g-emoji class=\"g-emoji\" alias=\"closed_book\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4d5.png\">📕</g-emoji> ","bodyHTML":"","assignees":{"__typename":"UserConnection","nodes":[]},"labels":{"__typename":"LabelConnection","edges":[]},"createdAt":"2021-03-07T21:19:21Z","repository":{"__typename":"Repository","id":"MDEwOlJlcG9zaXRvcnk3ODMxMzE3Mw==","name":"mit-deep-learning","languages":{"__typename":"LanguageConnection","edges":[{"__typename":"LanguageEdge","node":{"__typename":"Language","name":"Jupyter Notebook"}}]},"owner":{"__typename":"User","login":"lexfridman","avatarUrl":"https://avatars.githubusercontent.com/u/536621?u=d6a4396dac858671993163b112eae5eaaa2f8e87&v=4"}}},{"__typename":"Issue","closed":true,"title":"sdf","body":"","url":"https://github.com/OpenQDev/OpenQ-TestRepo/issues/290","id":"I_kwDOGWnnz85LAu6g","titleHTML":"sdf","bodyHTML":"","assignees":{"__typename":"UserConnection","nodes":[]},"labels":{"__typename":"LabelConnection","edges":[]},"createdAt":"2022-06-02T17:30:13Z","repository":{"__typename":"Repository","id":"R_kgDOGWnnzw","name":"OpenQ-TestRepo","languages":{"__typename":"LanguageConnection","edges":[]},"owner":{"__typename":"Organization","login":"OpenQDev","avatarUrl":"https://avatars.githubusercontent.com/u/77402538?v=4"}}},
	{"__typename":"Issue","closed":false,"title":"sdf","body":"","url":"https://github.com/OpenQDev/OpenQ-TestRepo/issues/224","id":"I_kwDOGWnnz85JAh1-","titleHTML":"sdf","bodyHTML":"","assignees":{"__typename":"UserConnection","nodes":[{"__typename":"User","name":"Christopher Stevers","url":"https://github.com/Christopher-Stevers"}]},"labels":{"__typename":"LabelConnection","edges":[]},"createdAt":"2022-05-04T03:01:31Z","repository":{"__typename":"Repository","id":"R_kgDOGWnnzw","name":"OpenQ-TestRepo","languages":{"__typename":"LanguageConnection","edges":[]},"owner":{"__typename":"Organization","login":"OpenQDev","avatarUrl":"https://avatars.githubusercontent.com/u/77402538?v=4"}}},{"__typename":"Issue","closed":true,"title":"Bot test","body":"","url":"https://github.com/OpenQDev/OpenQ-TestRepo/issues/292","id":"I_kwDOGWnnz85LBZmQ","titleHTML":"Bot test","bodyHTML":"","assignees":{"__typename":"UserConnection","nodes":[]},"labels":{"__typename":"LabelConnection","edges":[]},"createdAt":"2022-06-02T20:07:48Z","repository":{"__typename":"Repository","id":"R_kgDOGWnnzw","name":"OpenQ-TestRepo","languages":{"__typename":"LanguageConnection","edges":[]},"owner":{"__typename":"Organization","login":"OpenQDev","avatarUrl":"https://avatars.githubusercontent.com/u/77402538?v=4"}}},{"__typename":"Issue","closed":false,"title":"qwe","body":"","url":"https://github.com/OpenQDev/OpenQ-TestRepo/issues/226","id":"I_kwDOGWnnz85JAion","titleHTML":"qwe","bodyHTML":"","assignees":{"__typename":"UserConnection","nodes":[{"__typename":"User","name":"Christopher Stevers","url":"https://github.com/Christopher-Stevers"}]},"labels":{"__typename":"LabelConnection","edges":[]},"createdAt":"2022-05-04T03:10:12Z","repository":{"__typename":"Repository","id":"R_kgDOGWnnzw","name":"OpenQ-TestRepo","languages":{"__typename":"LanguageConnection","edges":[]},"owner":{"__typename":"Organization","login":"OpenQDev","avatarUrl":"https://avatars.githubusercontent.com/u/77402538?v=4"}}}],
"checkAuth": {
    "data": {
      "isAuthenticated": true
    }
  },
  "logout": {
    "data": {
      "isAuthenticated": true
    }
  },
  "tokenPrice":{"0x5FbDB2315678afecb367f032d93F642f64180aa": "0.67"},
  "openq-bot": {
    "created": "sdf",
    "refunded": false,
    "funded": "sdf"
  },
	
"getToken":	{
		"name": "Matic",
		"address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
		"symbol": "MATIC",
		"decimals": 14,
		"chainId": 80001,
		"path": "/crypto-logos/MATIC.svg"
	},

"metadata":
[
	{
		"name": "Matic",
		"address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
		"symbol": "MATIC",
		"decimals": 18,
		"chainId": 80001,
		"path": "/crypto-logos/MATIC.svg"
	},
	{
		"name": "Chainlink Token",
		"address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
		"symbol": "LINK",
		"decimals": 18,
		"chainId": 80001,
		"path": "/crypto-logos/LINK.svg"
	},
	{
		"name": "Dummy ERC20",
		"address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
		"symbol": "DERC20",
		"decimals": 18,
		"chainId": 80001,
		"path": "/crypto-logos/DAI.svg"
	},
	{
		"name": "Dummy ERC20 (Blacklisted)",
		"address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
		"symbol": "BDERC20",
		"decimals": 18,
		"chainId": 80001,
		"path": "/crypto-logos/DAI.svg"
	},
	{
		"name": "Wrapped Matic",
		"address": "0xd0A1E359811322d97991E03f863a0C30C2cF029C",
		"symbol": "WMATIC",
		"decimals": 18,
		"chainId": 80001,
		"path": "/crypto-logos/MATIC.svg"
	},
	{
		"name": "Dai Stablecoin",
		"address": "0xcB1e72786A6eb3b44C2a2429e317c8a2462CFeb1",
		"symbol": "DAI",
		"decimals": 18,
		"chainId": 80001,
		"path": "/crypto-logos/DAI.svg"
	},
	{
		"name": "Tether USD",
		"address": "0xc2132D05D31c914a87C6611C10748AEb04B58e8F",
		"symbol": "USDT",
		"decimals": 6,
		"chainId": 80001,
		"path": "/crypto-logos/USDT.svg"
	},
	{
		"name": "Wrapped Ether",
		"address": "0x714550C2C1Ea08688607D86ed8EeF4f5E4F22323",
		"symbol": "WETH",
		"decimals": 18,
		"chainId": 80001,
		"path": "/crypto-logos/ETH.svg"
	}
],
"tokenMetadata":	{ "name": "Chainlink Token", "address": "0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39", "symbol": "LINK", "decimals": 18, "chainId": 80001, "path": "/crypto-logos/LINK.svg" },
  "txnResponse": {
    "to": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": {
      "_hex": "0x07baa5",
      "_isBigNumber": true
    },
    "logsBloom": "0x000000000000000000000000000000000000000000000000000000000containsSearch && containsTag && (localShowUnfunded || isFunded) && (localShowClaimed || isUnclaimed) && bounty.url)bou00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080001008000000100000000000000000004000800000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000800080000000000000080000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000040000000000000020000000800000000000000000000000000000000400000000000000001001000004000180000000000000",
    "blockHash": "0x212935bbb943ce9c0f60efe80c28af593dcbafcb312dc331c44960c58de454b2",
    "transactionHash": "0x6bede2b3aa1ab6939a84521dd3daf123501392f3ece8f26a5e8c15b556fd6a1d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 58,
        "transactionHash": "0x6bede2b3aa1ab6939a84521dd3daf123501392f3ece8f26a5e8c15b556fd6a1d",
        "address": "0xf8C138968e52774f5756844ADa09D5096Dc5Aea8",
        "topics": [
          "0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
          "0x0000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc318"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x212935bbb943ce9c0f60efe80c28af593dcbafcb312dc331c44960c58de454b2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 58,
        "transactionHash": "0x6bede2b3aa1ab6939a84521dd3daf123501392f3ece8f26a5e8c15b556fd6a1d",
        "address": "0xf8C138968e52774f5756844ADa09D5096Dc5Aea8",
        "topics": [
          "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 1,
        "blockHash": "0x212935bbb943ce9c0f60efe80c28af593dcbafcb312dc331c44960c58de454b2"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 58,
        "transactionHash": "0x6bede2b3aa1ab6939a84521dd3daf123501392f3ece8f26a5e8c15b556fd6a1d",
        "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
        "topics": [
          "0x9b4ec425461e6b6e22c6b5a40c3fba7c8200dbc1832b92910140d4311872c139",
          "0x000000000000000000000000f8c138968e52774f5756844ada09d5096dc5aea8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb9226600000000000000000000000000000000000000000000000000000000627563430000000000000000000000000000000000000000000000000000000000000012495f6b77444f435543517a4d354835307630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000204d4445794f6b39795a3246756158706864476c76626a45794e54497a4d444931",
        "logIndex": 2,
        "blockHash": "0x212935bbb943ce9c0f60efe80c28af593dcbafcb312dc331c44960c58de454b2"
      }
    ],
    "blockNumber": 58,
    "confirmations": 1,
    "cumulativeGasUsed": {
      "_hex": "0x07baa5",
      "_isBigNumber": true
    },
    "effectiveGasPrice": {
      "_hex": "0x01888c060c",
      "_isBigNumber": true
    },
    "status": 1,
    "type": 2,
    "byzantium": true,
    "events": [
      {
        "transactionIndex": 0,
        "blockNumber": 58,
        "transactionHash": "0x6bede2b3aa1ab6939a84521dd3daf123501392f3ece8f26a5e8c15b556fd6a1d",
        "address": "0xf8C138968e52774f5756844ADa09D5096Dc5Aea8",
        "topics": [
          "0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
          "0x0000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc318"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x212935bbb943ce9c0f60efe80c28af593dcbafcb312dc331c44960c58de454b2",
        "args": [
          "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318"
        ],
        "event": "BeaconUpgraded",
        "eventSignature": "BeaconUpgraded(address)"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 58,
        "transactionHash": "0x6bede2b3aa1ab6939a84521dd3daf123501392f3ece8f26a5e8c15b556fd6a1d",
        "address": "0xf8C138968e52774f5756844ADa09D5096Dc5Aea8",
        "topics": [
          "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 1,
        "blockHash": "0x212935bbb943ce9c0f60efe80c28af593dcbafcb312dc331c44960c58de454b2",
        "args": [
          1
        ],
        "event": "Initialized",
        "eventSignature": "Initialized(uint8)"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 58,
        "transactionHash": "0x6bede2b3aa1ab6939a84521dd3daf123501392f3ece8f26a5e8c15b556fd6a1d",
        "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
        "topics": [
          "0x9b4ec425461e6b6e22c6b5a40c3fba7c8200dbc1832b92910140d4311872c139",
          "0x000000000000000000000000f8c138968e52774f5756844ada09d5096dc5aea8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb9226600000000000000000000000000000000000000000000000000000000627563430000000000000000000000000000000000000000000000000000000000000012495f6b77444f435543517a4d354835307630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000204d4445794f6b39795a3246756158706864476c76626a45794e54497a4d444931",
        "logIndex": 2,
        "blockHash": "0x212935bbb943ce9c0f60efe80c28af593dcbafcb312dc331c44960c58de454b2",
        "args": [
          "I_kwDOCUCQzM5H50v0",
          "MDEyOk9yZ2FuaXphdGlvbjEyNTIzMDI1",
          "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
          "0xf8C138968e52774f5756844ADa09D5096Dc5Aea8",
          {
            "_hex": "0x62756343",
            "_isBigNumber": true
          }
        ],
        "event": "BountyCreated",
        "eventSignature": "BountyCreated(string,string,address,address,uint256)"
      }
    ]
  }
}
